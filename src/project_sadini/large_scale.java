/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package project_sadini;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author sadini
 */
public class large_scale extends javax.swing.JFrame {

    /**
     * Creates new form large_scale
     */
    public large_scale() {
        initComponents();
        DisplayTable();
        DisplayTablestore();
        loadStoreID();
        DisplayTablestock();
        loadItemID();
    }

    public void clear(){
        
        st_location.setText("");
        st_capacity.setText("");
        item.setSelectedIndex(0);
    }

    public void clearItm(){
        
        Itm_name.setText("");
        
    }

    public void clearstk(){
        
        st_count.setText("");
        Date.setDate(null);
        Store.setSelectedIndex(0);
    }

    public void resetit(){
        Itm_name.setText("");
         
         
    }

     public void reset_st(){
        st_location.setText("");
        st_capacity.setText("");
        item.setSelectedIndex(0);
         
    }

     public void resetstk(){
        
        st_count.setText("");
        Date.setDate(null);
        Store.setSelectedIndex(0);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        Itm_name = new javax.swing.JTextField();
        it_insert = new javax.swing.JButton();
        it_delete = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        store_items = new javax.swing.JTable();
        reset_it = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        st_location = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        st_capacity = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        st_insert = new javax.swing.JButton();
        st_update = new javax.swing.JButton();
        st_delete = new javax.swing.JButton();
        item = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        store = new javax.swing.JTable();
        reset_st = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        st_count = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        Date = new com.toedter.calendar.JDateChooser();
        jLabel10 = new javax.swing.JLabel();
        stc_insert = new javax.swing.JButton();
        Store = new javax.swing.JComboBox<>();
        stk_update = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        stock = new javax.swing.JTable();
        reset_stk = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jTabbedPane1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseMoved(evt);
            }
        });
        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setText("Store Item Details");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel1.setText("Item Name");

        Itm_name.setText(" ");
        Itm_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Itm_nameActionPerformed(evt);
            }
        });

        it_insert.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        it_insert.setText("Insert");
        it_insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                it_insertActionPerformed(evt);
            }
        });

        it_delete.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        it_delete.setText("Delete");
        it_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                it_deleteActionPerformed(evt);
            }
        });

        store_items.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Item ID", "Item Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        store_items.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                store_itemsMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(store_items);

        reset_it.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        reset_it.setText("Reset");
        reset_it.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset_itActionPerformed(evt);
            }
        });

        jLabel11.setForeground(new java.awt.Color(255, 0, 51));
        jLabel11.setText(" ");
        jLabel11.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jLabel11KeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(314, 314, 314))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(148, 148, 148)
                        .addComponent(it_insert, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(67, 67, 67)
                        .addComponent(it_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(66, 66, 66)
                        .addComponent(reset_it, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 602, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(136, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Itm_name, javax.swing.GroupLayout.DEFAULT_SIZE, 223, Short.MAX_VALUE))
                .addGap(263, 263, 263))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel5)
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Itm_name, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(it_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reset_it, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(it_insert, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                .addGap(67, 67, 67))
        );

        jTabbedPane1.addTab("Store Items", jPanel1);

        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel2MouseClicked(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel6.setText("Store Details");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel2.setText("Store Location");

        st_location.setText(" ");
        st_location.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                st_locationActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel3.setText("Store Capacity");

        st_capacity.setText(" ");
        st_capacity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                st_capacityActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel4.setText("Item ID");

        st_insert.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        st_insert.setText("Insert");
        st_insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                st_insertActionPerformed(evt);
            }
        });

        st_update.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        st_update.setText("Update");
        st_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                st_updateActionPerformed(evt);
            }
        });

        st_delete.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        st_delete.setText("Delete");
        st_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                st_deleteActionPerformed(evt);
            }
        });

        item.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                itemMouseClicked(evt);
            }
        });

        store.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Store ID", "Store Location", "Store Capacity", "Item ID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        store.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                storeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(store);

        reset_st.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        reset_st.setText("Reset");
        reset_st.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset_stActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(66, 66, 66)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(st_capacity)
                                    .addComponent(st_location)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(item, 0, 202, Short.MAX_VALUE)
                                        .addGap(194, 194, 194))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(st_insert, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(66, 66, 66)
                                .addComponent(st_update)
                                .addGap(50, 50, 50)
                                .addComponent(st_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(54, 54, 54)
                                .addComponent(reset_st, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(267, 267, 267)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 810, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(st_location, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(st_capacity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(item, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reset_st, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(st_insert, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(st_update, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(st_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(79, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Store", jPanel2);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel8.setText(" Stock Details");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel7.setText("Stock Count");

        st_count.setText(" ");
        st_count.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                st_countActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel9.setText("Stock Date");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel10.setText("Store ID");

        stc_insert.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        stc_insert.setText("Insert");
        stc_insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stc_insertActionPerformed(evt);
            }
        });

        Store.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StoreActionPerformed(evt);
            }
        });

        stk_update.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        stk_update.setText("Update");
        stk_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stk_updateActionPerformed(evt);
            }
        });

        stock.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Stock ID", "Stock Count", "Stock Date", "Store ID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        stock.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stockMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(stock);

        reset_stk.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        reset_stk.setText("Reset");
        reset_stk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset_stkActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(310, 310, 310)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addComponent(stc_insert, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(88, 88, 88)
                        .addComponent(stk_update, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(87, 87, 87)
                        .addComponent(reset_stk, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(176, 176, 176)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Date, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(91, 91, 91)
                                .addComponent(Store, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(st_count, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 759, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(st_count, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addComponent(Date, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(Store, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stc_insert, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stk_update, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reset_stk, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(79, 79, 79))
        );

        jTabbedPane1.addTab("Stock", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 850, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Itm_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Itm_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Itm_nameActionPerformed




    private void DisplayTable(){
        try{
            
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/large_scale?useSSL=false","root","test@123");
            
            String sql = "select Item_ID, Item_Name from store_items";
            
            PreparedStatement pstmt = conn.prepareStatement(sql);
            ResultSet rs = pstmt.executeQuery();
            store_items.setModel(DbUtils.resultSetToTableModel(rs));
        }
        catch(Exception e){
           JOptionPane.showMessageDialog(this,e); 
        }
    }

    private void it_insertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_it_insertActionPerformed
        String itname = Itm_name.getText();

        try{

            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/large_scale?useSSL=false","root","test@123");

            String sql = "INSERT INTO `large_scale`.`store_items` (`Item_Name`) VALUES ('"+itname+"');";
            PreparedStatement pstmt = conn.prepareStatement(sql);
            pstmt.executeUpdate(sql);

            JOptionPane.showMessageDialog(this,"Insertion Successful");
            conn.close();
            DisplayTable();
            clearItm();
            //loadItemID();

        }catch(Exception e){
            JOptionPane.showMessageDialog(this,"Insertion Unsuccessful");
        }
    }//GEN-LAST:event_it_insertActionPerformed

    private void st_locationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_st_locationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_st_locationActionPerformed

    private void st_capacityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_st_capacityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_st_capacityActionPerformed


    private void DisplayTablestore(){
        try{
            
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/large_scale?useSSL=false","root","test@123");
            
            String sql = "select Store_ID, Store_Location, Store_Capacity,Item_ID from store";
            
            PreparedStatement pstmt = conn.prepareStatement(sql);
            ResultSet rs = pstmt.executeQuery();
            store.setModel(DbUtils.resultSetToTableModel(rs));
        }
        catch(Exception e){
           JOptionPane.showMessageDialog(this,e); 
        }
    }

   
    private void loadItemID(){

        try {
       Class.forName("com.mysql.cj.jdbc.Driver");
       Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/large_scale?useSSL=false","root","test@123");
            
       Statement stm = conn.createStatement();
       ResultSet rs = stm.executeQuery("SELECT Item_ID FROM large_scale.store_items");
       while(rs.next()){
       String Item1=rs.getString("Item_ID");
       item.addItem(Item1);
       }
       } catch (Exception e) {
       JOptionPane.showMessageDialog(null,e);
     }
    }


    private void st_insertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_st_insertActionPerformed
        String st_Location = st_location.getText();
        String st_Capacity = st_capacity.getText();
        String it_id;
        it_id = item.getSelectedItem().toString();

        try {
            
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/large_scale?useSSL=false","root","test@123");
            
            String sql = "Insert into store (Store_Location, Store_Capacity, Item_ID) values ('"+st_Location+"','"+st_Capacity+"','"+it_id+"')";
            PreparedStatement pstmt = conn.prepareStatement(sql);
            pstmt.executeUpdate(sql);
            
            JOptionPane.showMessageDialog(this,"Succcessfully Inserted!");
            conn.close();
            DisplayTablestore();
            clear();
            //loadStoreID();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,e); 
        }
        
        

    }//GEN-LAST:event_st_insertActionPerformed

    private void st_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_st_updateActionPerformed
        String st_Location = st_location.getText();
        String st_Capacity = st_capacity.getText();
        String it_id;
        it_id = item.getSelectedItem().toString();

        try {
            
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/large_scale?useSSL=false","root","test@123");
            int p = JOptionPane.showConfirmDialog(null,"Do you really want to update?","Update",JOptionPane.YES_NO_OPTION);
            if(p==0){
                int row = store.getSelectedRow();
                String value = (store.getModel().getValueAt(row, 0).toString());
                String sql = "UPDATE store SET Store_Location='"+st_Location+"', Store_Capacity='"+st_Capacity+"', Item_ID='"+it_id+"' where Store_ID="+value+" ";
                PreparedStatement pstmt = conn.prepareStatement(sql);
                pstmt.executeUpdate(sql);

                JOptionPane.showMessageDialog(this,"Succcessfully Updated!");
                conn.close();
                DisplayTablestore();
                clear();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,e); 
        }
    }//GEN-LAST:event_st_updateActionPerformed


     private void DisplayTablestock(){
        try{
            
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/large_scale?useSSL=false","root","test@123");
            
            String sql = "select Stock_ID, Stock_Count, Stock_Date,Store_ID from stock";
            
            PreparedStatement pstmt = conn.prepareStatement(sql);
            ResultSet rs = pstmt.executeQuery();
            stock.setModel(DbUtils.resultSetToTableModel(rs));
        }
        catch(Exception e){
           JOptionPane.showMessageDialog(this,e); 
        }
    }

     private void loadStoreID(){

        try {
       Class.forName("com.mysql.cj.jdbc.Driver");
       Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/large_scale?useSSL=false","root","test@123");
            
       Statement stm = conn.createStatement();
       ResultSet rs = stm.executeQuery("SELECT Store_ID FROM large_scale.store");
       while(rs.next()){
       String Store1=rs.getString("Store_ID");
       Store.addItem(Store1);
       }
       } catch (Exception e) {
       JOptionPane.showMessageDialog(null,e);
     }
    }


    private void stc_insertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stc_insertActionPerformed
        String stk_Count = st_count.getText();
        DateFormat df= new SimpleDateFormat("yyyy-MM-dd");
        String date = df.format(Date.getDate()).toString();
        String st_id;
        st_id = Store.getSelectedItem().toString();

        try {
            
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/large_scale?useSSL=false","root","test@123");
            
            String sql = "Insert into stock (Stock_Count, Stock_Date, Store_ID) values ('"+stk_Count+"','"+date+"','"+st_id+"')";
            PreparedStatement pstmt = conn.prepareStatement(sql);
            pstmt.executeUpdate(sql);
            
            JOptionPane.showMessageDialog(this,"Succcessfully Inserted!");
            conn.close();
            DisplayTablestock();
            clearstk();
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,e); 
        }
        
    }//GEN-LAST:event_stc_insertActionPerformed

    private void stk_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stk_updateActionPerformed
        String st_Count = st_count.getText();
        DateFormat df= new SimpleDateFormat("yyyy-MM-dd");
        String date = df.format(Date.getDate()).toString();
        String st_id;
        st_id = Store.getSelectedItem().toString();

        try {
            
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/large_scale?useSSL=false","root","test@123");
            int p = JOptionPane.showConfirmDialog(null,"Do you really want to update?","Update",JOptionPane.YES_NO_OPTION);
            if(p==0){
                int row = stock.getSelectedRow();
                String value = (stock.getModel().getValueAt(row, 0).toString());
                String sql = "UPDATE stock SET Stock_Count='"+st_Count+"', Stock_Date='"+date+"', Store_ID='"+st_id+"' where Stock_ID="+value+" ";
                PreparedStatement pstmt = conn.prepareStatement(sql);
                pstmt.executeUpdate(sql);

                JOptionPane.showMessageDialog(this,"Succcessfully Updated!");
                conn.close();
                DisplayTablestock();
                clearstk();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,e); 
        }
    }//GEN-LAST:event_stk_updateActionPerformed

    private void st_countActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_st_countActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_st_countActionPerformed

    private void StoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StoreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_StoreActionPerformed

    private void st_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_st_deleteActionPerformed
         try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/large_scale?useSSL=false","root","test@123");
            int p = JOptionPane.showConfirmDialog(null,"Do you really want to delete?","Delete",JOptionPane.YES_NO_OPTION);
            if(p==0){
                int row = store.getSelectedRow();
                String value = (store.getModel().getValueAt(row, 0).toString());
                

               String query3 ="DELETE FROM stock where Store_ID="+value+"";
               String query4 ="DELETE FROM store where Store_ID="+value+"";
               PreparedStatement pstmt = conn.prepareStatement(query4);

               pstmt.executeUpdate(query3);
               pstmt.executeUpdate(query4);
                

                JOptionPane.showMessageDialog(this,"Succcessfully Deleted!");
                conn.close();
                DefaultTableModel model = (DefaultTableModel)store.getModel();
                model.setRowCount(0);
                DisplayTablestore();
                DisplayTablestock();
                clear();
            }
        }
        catch(Exception e){
           JOptionPane.showMessageDialog(this,e); 
        }
    }//GEN-LAST:event_st_deleteActionPerformed

    private void it_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_it_deleteActionPerformed
        //String it_name = Itm_name.getText();
        
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/large_scale?useSSL=false","root","test@123");
            int p = JOptionPane.showConfirmDialog(null,"Do you really want to delete?","Delete",JOptionPane.YES_NO_OPTION);
            if(p==0){
                int row = store_items.getSelectedRow();
                String value = (store_items.getModel().getValueAt(row, 0).toString());
                

               String query1 ="DELETE FROM store where Item_ID="+value+"";
               String query2 ="DELETE FROM store_items where Item_ID="+value+"";
               PreparedStatement pstmt = conn.prepareStatement(query2);

               pstmt.executeUpdate(query1);
               pstmt.executeUpdate(query2);

                JOptionPane.showMessageDialog(this,"Succcessfully Deleted!");
                conn.close();
                DefaultTableModel model = (DefaultTableModel)store_items.getModel();
                model.setRowCount(0);
                DisplayTable();
                DisplayTablestore();
                clearItm();
            }
        }
        catch(Exception e){
           JOptionPane.showMessageDialog(this,e); 
        }
    }//GEN-LAST:event_it_deleteActionPerformed

    private void store_itemsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_store_itemsMouseClicked
        int selectedRow = store_items.getSelectedRow();
        TableModel recordTable = store_items.getModel();
        
        String id = recordTable.getValueAt(selectedRow, 0).toString();
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/large_scale?useSSL=false","root","test@123");
            
            String sql = "SELECT * FROM large_scale.store_items where Item_ID = '"+id+"' ";
            PreparedStatement pstmt = conn.prepareStatement(sql);
            ResultSet rs = pstmt.executeQuery();
            
            while(rs.next()){
                Itm_name.setText(rs.getString(2));
                
            }

            
            
        } catch (Exception e) {
        }
      
    }//GEN-LAST:event_store_itemsMouseClicked

    private void storeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_storeMouseClicked
        int selectedRow = store.getSelectedRow();
        TableModel recordTable = store.getModel();
        
        String id = recordTable.getValueAt(selectedRow, 0).toString();
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/large_scale?useSSL=false","root","test@123");
            
            String sql = "SELECT * FROM large_scale.store where Store_ID = '"+id+"' ";
            PreparedStatement pstmt = conn.prepareStatement(sql);
            ResultSet rs = pstmt.executeQuery();
            
            while(rs.next()){
                st_location.setText(rs.getString(2));
                st_capacity.setText(rs.getString(3));
                item.setSelectedItem(rs.getString(4));
            }

            
            
        } catch (Exception e) {
        }
    }//GEN-LAST:event_storeMouseClicked

    private void stockMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stockMouseClicked
         int selectedRow = stock.getSelectedRow();
        TableModel recordTable = stock.getModel();
        
        String id = recordTable.getValueAt(selectedRow, 0).toString();
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/large_scale?useSSL=false","root","test@123");
            
            String sql = "SELECT * FROM large_scale.stock where Stock_ID = '"+id+"' ";
            PreparedStatement pstmt = conn.prepareStatement(sql);
            ResultSet rs = pstmt.executeQuery();
            
            while(rs.next()){
                st_count.setText(rs.getString(2));
                Date.setDate(rs.getDate(3));
                Store.setSelectedItem(rs.getString(4));
            }

            
            
        } catch (Exception e) {
        }
    }//GEN-LAST:event_stockMouseClicked

    private void reset_itActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset_itActionPerformed
          resetit();         
    }//GEN-LAST:event_reset_itActionPerformed

    private void reset_stActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset_stActionPerformed
         reset_st();
    }//GEN-LAST:event_reset_stActionPerformed

    private void reset_stkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset_stkActionPerformed
         resetstk();
    }//GEN-LAST:event_reset_stkActionPerformed

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
         
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void jPanel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseClicked
       
    }//GEN-LAST:event_jPanel2MouseClicked

    private void jTabbedPane1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_jTabbedPane1MouseMoved

    private void itemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemMouseClicked
        
    }//GEN-LAST:event_itemMouseClicked

    private void jLabel11KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jLabel11KeyReleased
        String PATTERN = "^[a-zA-Z0-9]{0,30}$";
        Pattern patt = Pattern.compile(PATTERN);
        Matcher cha = patt.matcher(Itm_name.getText());
        if(!cha.matches()){
          jLabel11.setText("valid");
        }else{
            
            jLabel11.setText("Please Enter Only Characters!");
        }
    }//GEN-LAST:event_jLabel11KeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(large_scale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(large_scale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(large_scale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(large_scale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new large_scale().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser Date;
    private javax.swing.JTextField Itm_name;
    private javax.swing.JComboBox<String> Store;
    private javax.swing.JButton it_delete;
    private javax.swing.JButton it_insert;
    private javax.swing.JComboBox<String> item;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton reset_it;
    private javax.swing.JButton reset_st;
    private javax.swing.JButton reset_stk;
    private javax.swing.JTextField st_capacity;
    private javax.swing.JTextField st_count;
    private javax.swing.JButton st_delete;
    private javax.swing.JButton st_insert;
    private javax.swing.JTextField st_location;
    private javax.swing.JButton st_update;
    private javax.swing.JButton stc_insert;
    private javax.swing.JButton stk_update;
    private javax.swing.JTable stock;
    private javax.swing.JTable store;
    private javax.swing.JTable store_items;
    // End of variables declaration//GEN-END:variables
}
